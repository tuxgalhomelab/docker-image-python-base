#!/usr/bin/env bash
set -E -e -o pipefail

# Add repo specific metadata here.

BASE_IMAGE_CONFIG_KEY_PREFIX="BASE_IMAGE"

UPSTREAM_PACKAGE_NAME="pyenv/Python"
UPSTREAM_PYENV_VERSION_CONFIG_KEY="PYENV_VERSION"
UPSTREAM_PYTHON_VERSION_CONFIG_KEY="IMAGE_PYTHON_VERSION"
UPSTREAM_PYENV_CHECKSUM_CONFIG_KEY="PYENV_SHA256_CHECKSUM"
UPSTREAM_PYENV_GIT_REPO="https://github.com/pyenv/pyenv"

RELEASE_PACKAGE_NAME="Python"
RELEASE_PACKAGE_VERSION_CONFIG_KEY="IMAGE_PYTHON_VERSION"
RELEASE_TAG_PACKAGE_NAME="python"
RELEASE_USE_CUSTOM_RELEASE_VERSION="y"

TEST_TYPE="background"
TEST_CONTAINER_TYPE="python-base"
TEST_CONTAINER_START_WAIT_SECONDS="10"

current_pyenv_version() {
    get_config_arg ${UPSTREAM_PYENV_VERSION_CONFIG_KEY:?}
}

latest_pyenv_version() {
    git_remote_repo_latest_tag "${UPSTREAM_PYENV_GIT_REPO:?}"
}

current_python_version() {
    get_config_arg ${UPSTREAM_PYTHON_VERSION_CONFIG_KEY:?}
}

latest_python_version() {
    local pyenv_ver="${1:?}"
    local checkout_dir="$(mktemp -d)"
    pushd ${checkout_dir:?} >/dev/null 2>&1
    git clone --no-checkout --depth 1 --branch ${pyenv_ver:?} ${UPSTREAM_PYENV_GIT_REPO:?} pyenv >/dev/null 2>&1
    pushd pyenv >/dev/null 2>&1
    git ls-tree --full-name --name-only -r ${pyenv_ver:?}:plugins/python-build/share/python-build/ | \
        grep -P '^3\.\d+\.\d+$' | \
        sort --version-sort --reverse | \
        head -1
    popd >/dev/null 2>&1
    popd >/dev/null 2>&1
    rm -rf "${checkout_dir:?}"
}

current_upstream_version() {
    local pyenv_ver="$(current_pyenv_version)"
    local python_ver="$(current_python_version)"
    echo "${pyenv_ver:?}/${python_ver:?}"
}

latest_upstream_version() {
    local pyenv_ver="$(latest_pyenv_version)"
    local python_ver="$(latest_python_version ${pyenv_ver:?})"
    echo "${pyenv_ver:?}/${python_ver:?}"
}

update_latest_upstream_version() {
    local cur_ver="${1:?}"
    local latest_ver="${2:?}"
    local cur_pyenv_ver="$(echo "${cur_ver:?}" | cut -d '/' -f 1)"
    local cur_python_ver="$(echo "${cur_ver:?}" | cut -d '/' -f 2)"
    local latest_pyenv_ver="$(echo "${latest_ver:?}" | cut -d '/' -f 1)"
    local latest_python_ver="$(echo "${latest_ver:?}" | cut -d '/' -f 2)"
    local latest_pyenv_sha256_checksum="$(github_repo_archive_sha256_checksum ${UPSTREAM_PYENV_GIT_REPO:?} ${latest_pyenv_ver:?})"

    echo "Updating ${UPSTREAM_PACKAGE_NAME:?} ${UPSTREAM_PYENV_VERSION_CONFIG_KEY:?}/${UPSTREAM_PYTHON_VERSION_CONFIG_KEY:?} '${cur_ver:?}' -> '${latest_ver:?}'"
    set_config_arg "${UPSTREAM_PYENV_VERSION_CONFIG_KEY:?}" "${latest_pyenv_ver:?}"
    set_config_arg "${UPSTREAM_PYENV_CHECKSUM_CONFIG_KEY:?}" "${latest_pyenv_sha256_checksum:?}"
    set_config_arg "${UPSTREAM_PYTHON_VERSION_CONFIG_KEY:?}" "${latest_python_ver:?}"
    git add ${ARGS_FILE:?}
}

custom_release_version() {
    echo -n "v$(latest_base_image_tag)"
}

package_current_release_version() {
    get_config_arg "${RELEASE_PACKAGE_VERSION_CONFIG_KEY:?}"
}

test_start_container() {
    local container_name="${1:?}"
    docker run \
        --name ${container_name:?} \
        --detach \
        --rm \
        --publish 127.0.0.1:8082:8082 \
        ${IMAGE:?} \
        python3 -m http.server 8082
}

test_image_after_container_startup() {
    local container_name="${1:?}"
    test_http_endpoint "${container_name:?}" http 127.0.0.1 8082
}
